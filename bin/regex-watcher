#!/usr/bin/env node

const async = require('async');
const slack = require('slack');
const bot = slack.rtm.client();
const token = process.env.SLACK_BOT_TOKEN;

function warn (user, coin) {
  return `
  USER @${user} JUST POSTED ${coin} ADDRESS. THE GRID+ TEAM WILL NEVER POST ADDRESSES TO SLACK.
  CHANNEL ADMINS HAVE BEEN NOTIFIED. MALICIOUS BEHAVIOR IN THIS CHANNEL WILL RESULT IN BANNING.
  GRID+ TAKES THE SECURITY OF ITS USERS VERY SERIOUSLY, AND WILL ACT TO PROTECT THEM.
  :warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:\t\t\t:warning:
  `;
}

const map = [
  {
    format: (user) => {
      return warn(user, 'A NAMED ETHEREUM')
    },
    regex: /\s?\S+\.eth($|\s|[\.:;?|=\-\+"'`~@#$%^&*\(\),!"'\/\$])/i
  },
  {
    format: (user) => {
      return warn(user, 'AN ETHEREUM')
    },
    regex: /(0x)?[a-km-zA-HJ-NP-Z0-9]{40}/i
  }, {
    format: (user) => {
      return warn(user, 'A BITCOIN')
    },
    regex: /[13][a-km-zA-HJ-NP-Z1-9]{25,34}/i
  }
];

const pairs = [map[0], map[1], map[2]];

bot.message((message) => {
  let index = 0;

  if ( ! message.user) return; // message is from our bot. ignore

  if ( ! pairs.some((pair) => {
    return pair.regex.test(message.text);
  })) return; // no matches. bail

  const firstMatch = pairs.find((pair) => pair.regex.test(message.text));

  const {channel, user} = message;

  slack.users.info({token, user}, (err, user) => {
    if (err) throw err;

    const text = firstMatch.format(user.user.name);

    console.log(`sending warning to channel/conversation ${channel} for user ${user.user.name} and matched address ${message.text.match(firstMatch.regex)}:`);
    console.log(text);

    slack.chat.postMessage({token, channel, text}, (err) => {
      if (err) console.error(err);
    });

  });

});

bot.listen({token});